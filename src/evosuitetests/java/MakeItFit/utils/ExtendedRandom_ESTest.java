/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 04 19:55:36 GMT 2025
 */

package MakeItFit.utils;

import MakeItFit.utils.ExtendedRandom;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS                = true,
                     useVNET               = true,
                     resetStaticState      = true,
                     useJEE                = true)
public class ExtendedRandom_ESTest extends ExtendedRandom_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        ExtendedRandom extendedRandom0 = new ExtendedRandom((-1157L));
        extendedRandom0.nextFloat();
        int int0 = extendedRandom0.nextInt(0, 402);
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        ExtendedRandom extendedRandom0 = new ExtendedRandom((-1157L));
        // Undeclared exception!
        try {
            extendedRandom0.nextInt(0, 0);
            fail("Expecting exception: ArithmeticException");

        } catch (ArithmeticException e) {
            //
            // / by zero
            //
            verifyException("org.evosuite.runtime.Random", e);
        }
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        ExtendedRandom extendedRandom0 = new ExtendedRandom((-1157L));
        int            int0            = extendedRandom0.nextInt(0, 402);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        ExtendedRandom extendedRandom0 = new ExtendedRandom();
        int            int0            = extendedRandom0.nextInt((-208), 0);
        assertEquals((-208), int0);
    }
}
