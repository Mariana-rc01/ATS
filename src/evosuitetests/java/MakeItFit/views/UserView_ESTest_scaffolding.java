/**
 * Scaffolding file used to store all the setups needed to run
 * tests automatically generated by EvoSuite
 * Wed Jun 04 20:31:11 GMT 2025
 */

package MakeItFit.views;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@EvoSuiteClassExclude
public class UserView_ESTest_scaffolding {

    @org.junit.Rule
    public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr =
        new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

    private static final java.util.Properties defaultProperties =
        (java.util.Properties) java.lang.System.getProperties().clone();

    private org.evosuite.runtime.thread.ThreadStopper threadStopper =
        new org.evosuite.runtime.thread.ThreadStopper(
            org.evosuite.runtime.thread.KillSwitchHandler.getInstance(),
            3000);

    @BeforeClass
    public static void initEvoSuiteFramework() {
        org.evosuite.runtime.RuntimeSettings.className = "MakeItFit.views.UserView";
        org.evosuite.runtime.GuiSupport.initialize();
        org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads           = 100;
        org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
        org.evosuite.runtime.RuntimeSettings.mockSystemIn                 = true;
        org.evosuite.runtime.RuntimeSettings.sandboxMode =
            org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
        org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
        org.evosuite.runtime.classhandling.JDKClassResetter.init();
        setSystemProperties();
        initializeClasses();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
    }

    @AfterClass
    public static void clearEvoSuiteFramework() {
        Sandbox.resetDefaultSecurityManager();
        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
    }

    @Before
    public void initTestCase() {
        threadStopper.storeCurrentThreads();
        threadStopper.startRecordingTime();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
        org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
        setSystemProperties();
        org.evosuite.runtime.GuiSupport.setHeadless();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
        org.evosuite.runtime.agent.InstrumentingAgent.activate();
        org.evosuite.runtime.util.SystemInUtil.getInstance().initForTestCase();
    }

    @After
    public void doneWithTestCase() {
        threadStopper.killAndJoinClientThreads();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
        org.evosuite.runtime.classhandling.JDKClassResetter.reset();
        resetClasses();
        org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
        org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
        org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
    }

    public static void setSystemProperties() {

        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
        java.lang.System.setProperty("file.encoding", "UTF-8");
        java.lang.System.setProperty("java.awt.headless", "true");
        java.lang.System.setProperty("java.io.tmpdir", "/tmp");
        java.lang.System.setProperty("user.country", "US");
        java.lang.System.setProperty("user.dir", "/home/voidbert/ATS");
        java.lang.System.setProperty("user.home", "/home/voidbert");
        java.lang.System.setProperty("user.language", "en");
        java.lang.System.setProperty("user.name", "voidbert");
        java.lang.System.setProperty("user.timezone", "Europe/Lisbon");
    }

    private static void initializeClasses() {
        org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(
            UserView_ESTest_scaffolding.class.getClassLoader(),
            "MakeItFit.exceptions.InvalidTypeException",
            "MakeItFit.views.MakeItFitView",
            "MakeItFit.activities.ActivityInterface",
            "MakeItFit.activities.types.DistanceWithAltimetry",
            "MakeItFit.trainingPlan.TrainingPlan",
            "MakeItFit.activities.implementation.PushUp",
            "MakeItFit.exceptions.EntityDoesNotExistException",
            "MakeItFit.users.types.Amateur",
            "MakeItFit.queries.QueriesManager",
            "MakeItFit.utils.EmailValidator",
            "MakeItFit.activities.types.Repetitions",
            "MakeItFit.menu.MenuItem$PreCondition",
            "MakeItFit.queries.MostDemandingTrainingPlan",
            "MakeItFit.activities.types.Distance",
            "MakeItFit.users.User",
            "MakeItFit.MakeItFitController",
            "MakeItFit.activities.HardInterface",
            "MakeItFit.menu.Menu",
            "MakeItFit.users.types.Professional",
            "MakeItFit.menu.MenuItem",
            "MakeItFit.MakeItFit",
            "MakeItFit.users.UserInterface",
            "MakeItFit.users.Gender",
            "MakeItFit.trainingPlan.TrainingPlanManager",
            "MakeItFit.utils.MakeItFitDate",
            "MakeItFit.menu.MenuItem$Handler",
            "MakeItFit.exceptions.ExistingEntityConflictException",
            "MakeItFit.queries.WhoDidTheMostActivities",
            "MakeItFit.users.types.Occasional",
            "MakeItFit.activities.Activity",
            "MakeItFit.queries.MostDoneActivity",
            "MakeItFit.activities.types.RepetitionsWithWeights",
            "MakeItFit.activities.implementation.Trail",
            "MakeItFit.queries.WhoBurnsMoreCalories",
            "MakeItFit.time.TimeManager",
            "MakeItFit.views.UserView",
            "MakeItFit.queries.HowManyKMsDone",
            "MakeItFit.users.UserManager",
            "MakeItFit.activities.implementation.Running",
            "MakeItFit.queries.HowManyAltimetryDone",
            "MakeItFit.activities.implementation.WeightSquat");
    }

    private static void resetClasses() {
        org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(
            UserView_ESTest_scaffolding.class.getClassLoader());

        org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
            "MakeItFit.views.MakeItFitView",
            "MakeItFit.views.UserView",
            "MakeItFit.MakeItFitController",
            "MakeItFit.MakeItFit",
            "MakeItFit.users.UserManager",
            "MakeItFit.trainingPlan.TrainingPlanManager",
            "MakeItFit.queries.QueriesManager",
            "MakeItFit.queries.HowManyAltimetryDone",
            "MakeItFit.queries.HowManyKMsDone",
            "MakeItFit.queries.MostDoneActivity",
            "MakeItFit.queries.MostDemandingTrainingPlan",
            "MakeItFit.queries.WhoBurnsMoreCalories",
            "MakeItFit.queries.WhoDidTheMostActivities",
            "MakeItFit.time.TimeManager",
            "MakeItFit.utils.MakeItFitDate",
            "MakeItFit.exceptions.EntityDoesNotExistException",
            "MakeItFit.menu.MenuItem",
            "MakeItFit.menu.Menu",
            "MakeItFit.utils.EmailValidator");
    }
}
