/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 04 20:07:42 GMT 2025
 */

package MakeItFit.activities.implementation;

import java.util.UUID;

import MakeItFit.activities.implementation.PushUp;
import MakeItFit.utils.MakeItFitDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.*;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true,
                     useVFS                = true,
                     useVNET               = true,
                     resetStaticState      = true,
                     useJEE                = true)
public class PushUp_ESTest extends PushUp_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        UUID          uUID0          = MockUUID.fromString("");
        MakeItFitDate makeItFitDate0 = new MakeItFitDate();
        PushUp        pushUp0 = new PushUp(uUID0, makeItFitDate0, 0, "", "{:sCFhsr\"WR5FV7", 0, 0);
        PushUp        pushUp1 = pushUp0.clone();
        assertNotSame(pushUp1, pushUp0);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null, (MakeItFitDate) null, 3, "", "'dJYpc 7", 3, 3);
        pushUp0.setDuration(1);
        PushUp pushUp1 = pushUp0.clone();
        assertEquals(3, pushUp1.getExpectedDuration());
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        PushUp pushUp0 =
            new PushUp((UUID) null, (MakeItFitDate) null, (-1), "thQuYr?i_DAiO%l", "", (-1), (-1));
        pushUp0.setDuration((-1));
        PushUp pushUp1 = pushUp0.clone();
        assertEquals((-1), pushUp1.getSeries());
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        UUID          uUID0          = MockUUID.randomUUID();
        MakeItFitDate makeItFitDate0 = new MakeItFitDate();
        PushUp        pushUp0        = new PushUp(uUID0,
                                    makeItFitDate0,
                                    (-1188),
                                    "]RlX5&.>{MuvmNU",
                                    "MakeItFit.activities.implementation.PushUp",
                                    (-1188),
                                    (-651));
        pushUp0.setCaloricWaste(1064);
        PushUp pushUp1 = pushUp0.clone();
        assertEquals((-1188), pushUp1.getExpectedDuration());
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-110),
                                    "MakeItFit.activities.implementation.PushUp",
                                    "MakeItFit.activities.implementation.PushUp",
                                    (-110),
                                    (-110));
        pushUp0.updateActivity((-110));
        PushUp pushUp1 = pushUp0.clone();
        assertEquals((-133100), pushUp1.getCaloricWaste());
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        PushUp pushUp0 =
            new PushUp((UUID) null, (MakeItFitDate) null, (-1), "thQuYr?i_DAiO%l", "", (-1), (-1));
        pushUp0.setRepetitions(0);
        int int0 = pushUp0.caloricWaste((-1971.533F));
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null, (MakeItFitDate) null, 3, "", "'dJYpc 7", 3, 3);
        int    int0    = pushUp0.caloricWaste(3);
        assertEquals(2, int0);
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        PushUp pushUp1 = pushUp0.clone();
        pushUp0.setDesignation((String) null);
        // Undeclared exception!
        try {
            pushUp0.equals(pushUp1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("MakeItFit.activities.Activity", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        PushUp pushUp0 = null;
        try {
            pushUp0 = new PushUp((PushUp) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("MakeItFit.activities.Activity", e);
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        PushUp pushUp0 =
            new PushUp((UUID) null, (MakeItFitDate) null, (-1), "thQuYr?i_DAiO%l", "", (-1), (-1));
        PushUp pushUp1 = new PushUp(pushUp0);
        assertEquals(0, pushUp1.getDuration());
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        PushUp  pushUp0  = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        boolean boolean0 = pushUp0.equals(pushUp0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        PushUp  pushUp0  = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        boolean boolean0 = pushUp0.equals((Object) null);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        PushUp pushUp0 = null;
        try {
            pushUp0 = new PushUp();
            fail("Expecting exception: NoSuchMethodError");

        } catch (NoSuchMethodError e) {
            //
            // org.evosuite.runtime.mock.java.util.MockUUID.UUID(JJ)Ljava/util/UUID;
            //
            verifyException("MakeItFit.activities.Activity", e);
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        pushUp0.calculateCaloricWaste((-1971.533F));
        assertEquals((-197), pushUp0.getCaloricWaste());
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        int    int0    = pushUp0.caloricWaste((-1971.533F));
        assertEquals((-197), int0);
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        PushUp pushUp0 = new PushUp((UUID) null,
                                    (MakeItFitDate) null,
                                    (-1),
                                    "thQuYr?i_DAiO%l",
                                    "thQuYr?i_DAiO%l",
                                    (-1),
                                    (-1));
        String string0 = pushUp0.toString();
        assertEquals(
            "Activity: thQuYr?i_DAiO%l, Code: 00000000-0100-4000-8200-000003000000, Designation: thQuYr?i_DAiO%l, Expected Duration: -1 minutes, Realization Date: null, Caloric Waste: 0 calories, Repetitions: -1, Series: -1, ",
            string0);
    }
}
